Component: Arm Compiler for Embedded 6.21 Tool: armlink [5ec1fa00]

==============================================================================

Section Cross References

    startup_stm32f030.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f030.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f030.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f030.o(RESET) refers to startup_stm32f030.o(STACK) for __initial_sp
    startup_stm32f030.o(RESET) refers to startup_stm32f030.o(.text) for Reset_Handler
    startup_stm32f030.o(RESET) refers to vga-min.o(.text.PendSV_Handler) for PendSV_Handler
    startup_stm32f030.o(RESET) refers to ps2.o(.text.EXTI0_1_IRQHandler) for EXTI0_1_IRQHandler
    startup_stm32f030.o(RESET) refers to vga-min.o(.text.TIM3_IRQHandler) for TIM3_IRQHandler
    startup_stm32f030.o(RESET) refers to serial.o(.text.USART1_IRQHandler) for USART1_IRQHandler
    startup_stm32f030.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f030.o(.text) refers to rcc.o(.text.SystemInit) for SystemInit
    startup_stm32f030.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f030.o(.text) refers to startup_stm32f030.o(HEAP) for Heap_Mem
    startup_stm32f030.o(.text) refers to startup_stm32f030.o(STACK) for Stack_Mem
    vga-min.o(.text.VGA_Init) refers to vga-min.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    vga-min.o(.ARM.exidx.text.VGA_Init) refers to vga-min.o(.text.VGA_Init) for [Anonymous Symbol]
    vga-min.o(.text.TIM3_IRQHandler) refers to vga-min.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    vga-min.o(.text.TIM3_IRQHandler) refers to vgafont.o(.rodata.FONT_TABLE) for FONT_TABLE
    vga-min.o(.text.TIM3_IRQHandler) refers to vga-min.o(.bss.TextBuffer) for TextBuffer
    vga-min.o(.ARM.exidx.text.TIM3_IRQHandler) refers to vga-min.o(.text.TIM3_IRQHandler) for [Anonymous Symbol]
    vga-min.o(.ARM.exidx.text.PendSV_Handler) refers to vga-min.o(.text.PendSV_Handler) for [Anonymous Symbol]
    vga-min.o(.text.Delay) refers to vga-min.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    vga-min.o(.ARM.exidx.text.Delay) refers to vga-min.o(.text.Delay) for [Anonymous Symbol]
    serial.o(.text.USART_Init) refers to fifo.o(.text.FIFO_Clear) for FIFO_Clear
    serial.o(.text.USART_Init) refers to serial.o(.data..L_MergedGlobals) for [Anonymous Symbol]
    serial.o(.ARM.exidx.text.USART_Init) refers to serial.o(.text.USART_Init) for [Anonymous Symbol]
    serial.o(.text.USART1_IRQHandler) refers to fifo.o(.text.FIFO_Write) for FIFO_Write
    serial.o(.text.USART1_IRQHandler) refers to fifo.o(.text.FIFO_Read) for FIFO_Read
    serial.o(.text.USART1_IRQHandler) refers to serial.o(.data..L_MergedGlobals) for [Anonymous Symbol]
    serial.o(.ARM.exidx.text.USART1_IRQHandler) refers to serial.o(.text.USART1_IRQHandler) for [Anonymous Symbol]
    serial.o(.text.Putchar) refers to fifo.o(.text.FIFO_Write) for FIFO_Write
    serial.o(.text.Putchar) refers to serial.o(.data..L_MergedGlobals) for [Anonymous Symbol]
    serial.o(.ARM.exidx.text.Putchar) refers to serial.o(.text.Putchar) for [Anonymous Symbol]
    serial.o(.text.PutStr) refers to serial.o(.text.Putchar) for Putchar
    serial.o(.ARM.exidx.text.PutStr) refers to serial.o(.text.PutStr) for [Anonymous Symbol]
    serial.o(.text.Putint) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    serial.o(.text.Putint) refers to serial.o(.text.Putchar) for Putchar
    serial.o(.ARM.exidx.text.Putint) refers to serial.o(.text.Putint) for [Anonymous Symbol]
    serial.o(.text.Puthex) refers to serial.o(.text.Putchar) for Putchar
    serial.o(.ARM.exidx.text.Puthex) refers to serial.o(.text.Puthex) for [Anonymous Symbol]
    fifo.o(.ARM.exidx.text.FIFO_Clear) refers to fifo.o(.text.FIFO_Clear) for [Anonymous Symbol]
    fifo.o(.ARM.exidx.text.FIFO_WriteAvail) refers to fifo.o(.text.FIFO_WriteAvail) for [Anonymous Symbol]
    fifo.o(.ARM.exidx.text.FIFO_Write) refers to fifo.o(.text.FIFO_Write) for [Anonymous Symbol]
    fifo.o(.ARM.exidx.text.FIFO_ReadAvail) refers to fifo.o(.text.FIFO_ReadAvail) for [Anonymous Symbol]
    fifo.o(.ARM.exidx.text.FIFO_Read) refers to fifo.o(.text.FIFO_Read) for [Anonymous Symbol]
    fifo.o(.text.Getc) refers to fifo.o(.text.FIFO_Read) for FIFO_Read
    fifo.o(.ARM.exidx.text.Getc) refers to fifo.o(.text.Getc) for [Anonymous Symbol]
    fifo.o(.text.Getc_Timeout) refers to fifo.o(.text.FIFO_Read) for FIFO_Read
    fifo.o(.text.Getc_Timeout) refers to vga-min.o(.bss..L_MergedGlobals) for MicroTimer0
    fifo.o(.ARM.exidx.text.Getc_Timeout) refers to fifo.o(.text.Getc_Timeout) for [Anonymous Symbol]
    ps2.o(.text.PS2_Init) refers to fifo.o(.text.FIFO_Clear) for FIFO_Clear
    ps2.o(.text.PS2_Init) refers to ps2.o(.bss..L_MergedGlobals.22) for [Anonymous Symbol]
    ps2.o(.text.PS2_Init) refers to ps2.o(.data..L_MergedGlobals) for [Anonymous Symbol]
    ps2.o(.ARM.exidx.text.PS2_Init) refers to ps2.o(.text.PS2_Init) for [Anonymous Symbol]
    ps2.o(.text.EXTI0_1_IRQHandler) refers to ps2.o(.text.PS2_Parity) for PS2_Parity
    ps2.o(.text.EXTI0_1_IRQHandler) refers to fifo.o(.text.FIFO_Write) for FIFO_Write
    ps2.o(.text.EXTI0_1_IRQHandler) refers to ps2.o(.bss..L_MergedGlobals.22) for [Anonymous Symbol]
    ps2.o(.text.EXTI0_1_IRQHandler) refers to vga-min.o(.bss..L_MergedGlobals) for MicroTimer1
    ps2.o(.text.EXTI0_1_IRQHandler) refers to ps2.o(.data..L_MergedGlobals) for [Anonymous Symbol]
    ps2.o(.ARM.exidx.text.EXTI0_1_IRQHandler) refers to ps2.o(.text.EXTI0_1_IRQHandler) for [Anonymous Symbol]
    ps2.o(.ARM.exidx.text.PS2_Parity) refers to ps2.o(.text.PS2_Parity) for [Anonymous Symbol]
    ps2.o(.text.PS2_Send) refers to vga-min.o(.text.Delay) for Delay
    ps2.o(.text.PS2_Send) refers to ps2.o(.text.PS2_Parity) for PS2_Parity
    ps2.o(.text.PS2_Send) refers to ps2.o(.bss..L_MergedGlobals.22) for [Anonymous Symbol]
    ps2.o(.ARM.exidx.text.PS2_Send) refers to ps2.o(.text.PS2_Send) for [Anonymous Symbol]
    ps2.o(.text.PS2_Update_LED) refers to ps2.o(.text.PS2_Send) for PS2_Send
    ps2.o(.text.PS2_Update_LED) refers to ps2.o(.bss..L_MergedGlobals.22) for [Anonymous Symbol]
    ps2.o(.ARM.exidx.text.PS2_Update_LED) refers to ps2.o(.text.PS2_Update_LED) for [Anonymous Symbol]
    ps2.o(.text.NumLockOn) refers to ps2.o(.text.PS2_Update_LED) for PS2_Update_LED
    ps2.o(.text.NumLockOn) refers to ps2.o(.bss..L_MergedGlobals.22) for [Anonymous Symbol]
    ps2.o(.ARM.exidx.text.NumLockOn) refers to ps2.o(.text.NumLockOn) for [Anonymous Symbol]
    ps2.o(.text.NumLockOff) refers to ps2.o(.text.PS2_Update_LED) for PS2_Update_LED
    ps2.o(.text.NumLockOff) refers to ps2.o(.bss..L_MergedGlobals.22) for [Anonymous Symbol]
    ps2.o(.ARM.exidx.text.NumLockOff) refers to ps2.o(.text.NumLockOff) for [Anonymous Symbol]
    ps2.o(.text.PS2_Task) refers to fifo.o(.text.Getc) for Getc
    ps2.o(.text.PS2_Task) refers to ps2.o(.text.PS2_Send) for PS2_Send
    ps2.o(.text.PS2_Task) refers to ps2.o(.text.Lookup_Key) for Lookup_Key
    ps2.o(.text.PS2_Task) refers to ps2.o(.text.PS2_Update_LED) for PS2_Update_LED
    ps2.o(.text.PS2_Task) refers to serial.o(.text.Putchar) for Putchar
    ps2.o(.text.PS2_Task) refers to serial.o(.text.PutStr) for PutStr
    ps2.o(.text.PS2_Task) refers to ps2.o(.data..L_MergedGlobals) for [Anonymous Symbol]
    ps2.o(.text.PS2_Task) refers to ps2.o(.bss..L_MergedGlobals.22) for [Anonymous Symbol]
    ps2.o(.text.PS2_Task) refers to ps2.o(.rodata.Scancode_Translations) for Scancode_Translations
    ps2.o(.text.PS2_Task) refers to ps2.o(.rodata.Escaped_Regular) for Escaped_Regular
    ps2.o(.text.PS2_Task) refers to ps2.o(.rodata.Shifted_Regular) for Shifted_Regular
    ps2.o(.text.PS2_Task) refers to ps2.o(.rodata.Unshifted_Regular) for Unshifted_Regular
    ps2.o(.text.PS2_Task) refers to ps2.o(.rodata.Keypad_Regular) for Keypad_Regular
    ps2.o(.text.PS2_Task) refers to ps2.o(.rodata.Keypad_Numeric) for Keypad_Numeric
    ps2.o(.ARM.exidx.text.PS2_Task) refers to ps2.o(.text.PS2_Task) for [Anonymous Symbol]
    ps2.o(.ARM.exidx.text.Lookup_Key) refers to ps2.o(.text.Lookup_Key) for [Anonymous Symbol]
    ps2.o(.data..L_MergedGlobals) refers to ps2.o(.rodata.str1.1) for [Anonymous Symbol]
    rcc.o(.ARM.exidx.text.SystemInit) refers to rcc.o(.text.SystemInit) for [Anonymous Symbol]
    term.o(.text.main) refers to vga-min.o(.text.VGA_Init) for VGA_Init
    term.o(.text.main) refers to serial.o(.text.USART_Init) for USART_Init
    term.o(.text.main) refers to ps2.o(.text.PS2_Init) for PS2_Init
    term.o(.text.main) refers to ansi.o(.text.ANSI_Init) for ANSI_Init
    term.o(.text.main) refers to fifo.o(.text.FIFO_ReadAvail) for FIFO_ReadAvail
    term.o(.text.main) refers to fifo.o(.text.Getc) for Getc
    term.o(.text.main) refers to ansi.o(.text.ANSI_FSM) for ANSI_FSM
    term.o(.text.main) refers to ps2.o(.text.PS2_Task) for PS2_Task
    term.o(.text.main) refers to ansi.o(.text.Cursor_Task) for Cursor_Task
    term.o(.text.main) refers to serial.o(.data..L_MergedGlobals) for RxBuf
    term.o(.text.main) refers to ps2.o(.data..L_MergedGlobals) for PS2_Buf
    term.o(.text.main) refers to ansi.o(.bss..L_MergedGlobals) for Cursor
    term.o(.ARM.exidx.text.main) refers to term.o(.text.main) for [Anonymous Symbol]
    ansi.o(.text.VerticalBlank_CB) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.ARM.exidx.text.VerticalBlank_CB) refers to ansi.o(.text.VerticalBlank_CB) for [Anonymous Symbol]
    ansi.o(.text.Cursor_Task) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.text.Cursor_Task) refers to vga-min.o(.bss.TextBuffer) for TextBuffer
    ansi.o(.ARM.exidx.text.Cursor_Task) refers to ansi.o(.text.Cursor_Task) for [Anonymous Symbol]
    ansi.o(.text.Cursor_Disable) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.text.Cursor_Disable) refers to vga-min.o(.bss.TextBuffer) for TextBuffer
    ansi.o(.ARM.exidx.text.Cursor_Disable) refers to ansi.o(.text.Cursor_Disable) for [Anonymous Symbol]
    ansi.o(.text.Cursor_Enable) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.ARM.exidx.text.Cursor_Enable) refers to ansi.o(.text.Cursor_Enable) for [Anonymous Symbol]
    ansi.o(.text.Cursor_SavePosition) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    ansi.o(.text.Cursor_SavePosition) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.ARM.exidx.text.Cursor_SavePosition) refers to ansi.o(.text.Cursor_SavePosition) for [Anonymous Symbol]
    ansi.o(.text.Cursor_RestorePosition) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    ansi.o(.text.Cursor_RestorePosition) refers to ansi.o(.text.PhysicalCursor_MoveTo) for PhysicalCursor_MoveTo
    ansi.o(.text.Cursor_RestorePosition) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.ARM.exidx.text.Cursor_RestorePosition) refers to ansi.o(.text.Cursor_RestorePosition) for [Anonymous Symbol]
    ansi.o(.text.PhysicalCursor_MoveTo) refers to ansi.o(.text.Cursor_Reset) for Cursor_Reset
    ansi.o(.text.PhysicalCursor_MoveTo) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.text.PhysicalCursor_MoveTo) refers to vga-min.o(.bss.TextBuffer) for TextBuffer
    ansi.o(.ARM.exidx.text.PhysicalCursor_MoveTo) refers to ansi.o(.text.PhysicalCursor_MoveTo) for [Anonymous Symbol]
    ansi.o(.text.Cursor_Reset) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.text.Cursor_Reset) refers to vga-min.o(.bss.TextBuffer) for TextBuffer
    ansi.o(.ARM.exidx.text.Cursor_Reset) refers to ansi.o(.text.Cursor_Reset) for [Anonymous Symbol]
    ansi.o(.text.BlankChar) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.ARM.exidx.text.BlankChar) refers to ansi.o(.text.BlankChar) for [Anonymous Symbol]
    ansi.o(.text.VGA_ClearScreen) refers to aeabi_memset.o(.text) for __aeabi_memset
    ansi.o(.text.VGA_ClearScreen) refers to ansi.o(.text.Cursor_Reset) for Cursor_Reset
    ansi.o(.text.VGA_ClearScreen) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.text.VGA_ClearScreen) refers to vga-min.o(.bss.TextBuffer) for TextBuffer
    ansi.o(.ARM.exidx.text.VGA_ClearScreen) refers to ansi.o(.text.VGA_ClearScreen) for [Anonymous Symbol]
    ansi.o(.text.VGA_ClearScreenToEnd) refers to aeabi_memset.o(.text) for __aeabi_memset
    ansi.o(.text.VGA_ClearScreenToEnd) refers to ansi.o(.text.Cursor_Reset) for Cursor_Reset
    ansi.o(.text.VGA_ClearScreenToEnd) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.text.VGA_ClearScreenToEnd) refers to vga-min.o(.bss.TextBuffer) for TextBuffer
    ansi.o(.ARM.exidx.text.VGA_ClearScreenToEnd) refers to ansi.o(.text.VGA_ClearScreenToEnd) for [Anonymous Symbol]
    ansi.o(.text.VGA_ClearScreenToStart) refers to aeabi_memset.o(.text) for __aeabi_memset
    ansi.o(.text.VGA_ClearScreenToStart) refers to ansi.o(.text.Cursor_Reset) for Cursor_Reset
    ansi.o(.text.VGA_ClearScreenToStart) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.text.VGA_ClearScreenToStart) refers to vga-min.o(.bss.TextBuffer) for TextBuffer
    ansi.o(.ARM.exidx.text.VGA_ClearScreenToStart) refers to ansi.o(.text.VGA_ClearScreenToStart) for [Anonymous Symbol]
    ansi.o(.text.VGA_ClearLine) refers to aeabi_memset.o(.text) for __aeabi_memset
    ansi.o(.text.VGA_ClearLine) refers to ansi.o(.text.Cursor_Reset) for Cursor_Reset
    ansi.o(.text.VGA_ClearLine) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.text.VGA_ClearLine) refers to vga-min.o(.bss.TextBuffer) for TextBuffer
    ansi.o(.ARM.exidx.text.VGA_ClearLine) refers to ansi.o(.text.VGA_ClearLine) for [Anonymous Symbol]
    ansi.o(.text.VGA_ClearLineToEnd) refers to aeabi_memset.o(.text) for __aeabi_memset
    ansi.o(.text.VGA_ClearLineToEnd) refers to ansi.o(.text.Cursor_Reset) for Cursor_Reset
    ansi.o(.text.VGA_ClearLineToEnd) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.text.VGA_ClearLineToEnd) refers to vga-min.o(.bss.TextBuffer) for TextBuffer
    ansi.o(.ARM.exidx.text.VGA_ClearLineToEnd) refers to ansi.o(.text.VGA_ClearLineToEnd) for [Anonymous Symbol]
    ansi.o(.text.VGA_ClearLineToStart) refers to aeabi_memset.o(.text) for __aeabi_memset
    ansi.o(.text.VGA_ClearLineToStart) refers to ansi.o(.text.Cursor_Reset) for Cursor_Reset
    ansi.o(.text.VGA_ClearLineToStart) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.text.VGA_ClearLineToStart) refers to vga-min.o(.bss.TextBuffer) for TextBuffer
    ansi.o(.ARM.exidx.text.VGA_ClearLineToStart) refers to ansi.o(.text.VGA_ClearLineToStart) for [Anonymous Symbol]
    ansi.o(.text.ScrollRegionUp) refers to rt_memmove.o(.text) for __aeabi_memmove
    ansi.o(.text.ScrollRegionUp) refers to aeabi_memset.o(.text) for __aeabi_memset
    ansi.o(.text.ScrollRegionUp) refers to ansi.o(.text.Cursor_Reset) for Cursor_Reset
    ansi.o(.text.ScrollRegionUp) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.text.ScrollRegionUp) refers to vga-min.o(.bss.TextBuffer) for TextBuffer
    ansi.o(.ARM.exidx.text.ScrollRegionUp) refers to ansi.o(.text.ScrollRegionUp) for [Anonymous Symbol]
    ansi.o(.text.ScrollRegionDown) refers to rt_memmove.o(.text) for __aeabi_memmove
    ansi.o(.text.ScrollRegionDown) refers to aeabi_memset.o(.text) for __aeabi_memset
    ansi.o(.text.ScrollRegionDown) refers to ansi.o(.text.Cursor_Reset) for Cursor_Reset
    ansi.o(.text.ScrollRegionDown) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.text.ScrollRegionDown) refers to vga-min.o(.bss.TextBuffer) for TextBuffer
    ansi.o(.ARM.exidx.text.ScrollRegionDown) refers to ansi.o(.text.ScrollRegionDown) for [Anonymous Symbol]
    ansi.o(.text.ScrollUp) refers to ansi.o(.text.ScrollRegionUp) for ScrollRegionUp
    ansi.o(.text.ScrollUp) refers to aeabi_memset.o(.text) for __aeabi_memset
    ansi.o(.text.ScrollUp) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.text.ScrollUp) refers to vga-min.o(.bss.TextBuffer) for TextBuffer
    ansi.o(.ARM.exidx.text.ScrollUp) refers to ansi.o(.text.ScrollUp) for [Anonymous Symbol]
    ansi.o(.text.ScrollDown) refers to ansi.o(.text.ScrollRegionDown) for ScrollRegionDown
    ansi.o(.text.ScrollDown) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.ARM.exidx.text.ScrollDown) refers to ansi.o(.text.ScrollDown) for [Anonymous Symbol]
    ansi.o(.text.ANSICursor_MoveTo) refers to ansi.o(.text.PhysicalCursor_MoveTo) for PhysicalCursor_MoveTo
    ansi.o(.text.ANSICursor_MoveTo) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.ARM.exidx.text.ANSICursor_MoveTo) refers to ansi.o(.text.ANSICursor_MoveTo) for [Anonymous Symbol]
    ansi.o(.text.OriginRow) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.ARM.exidx.text.OriginRow) refers to ansi.o(.text.OriginRow) for [Anonymous Symbol]
    ansi.o(.text.Cursor_Up) refers to ansi.o(.text.OriginRow) for OriginRow
    ansi.o(.text.Cursor_Up) refers to ansi.o(.text.PhysicalCursor_MoveTo) for PhysicalCursor_MoveTo
    ansi.o(.text.Cursor_Up) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.ARM.exidx.text.Cursor_Up) refers to ansi.o(.text.Cursor_Up) for [Anonymous Symbol]
    ansi.o(.text.Cursor_Down) refers to ansi.o(.text.PhysicalCursor_MoveTo) for PhysicalCursor_MoveTo
    ansi.o(.text.Cursor_Down) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.ARM.exidx.text.Cursor_Down) refers to ansi.o(.text.Cursor_Down) for [Anonymous Symbol]
    ansi.o(.text.Cursor_Left) refers to ansi.o(.text.PhysicalCursor_MoveTo) for PhysicalCursor_MoveTo
    ansi.o(.text.Cursor_Left) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.ARM.exidx.text.Cursor_Left) refers to ansi.o(.text.Cursor_Left) for [Anonymous Symbol]
    ansi.o(.text.Cursor_Right) refers to ansi.o(.text.PhysicalCursor_MoveTo) for PhysicalCursor_MoveTo
    ansi.o(.text.Cursor_Right) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.ARM.exidx.text.Cursor_Right) refers to ansi.o(.text.Cursor_Right) for [Anonymous Symbol]
    ansi.o(.text.Cursor_NextLine) refers to ansi.o(.text.Cursor_Down) for Cursor_Down
    ansi.o(.text.Cursor_NextLine) refers to ansi.o(.text.PhysicalCursor_MoveTo) for PhysicalCursor_MoveTo
    ansi.o(.text.Cursor_NextLine) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.ARM.exidx.text.Cursor_NextLine) refers to ansi.o(.text.Cursor_NextLine) for [Anonymous Symbol]
    ansi.o(.text.Cursor_PreviousLine) refers to ansi.o(.text.Cursor_Up) for Cursor_Up
    ansi.o(.text.Cursor_PreviousLine) refers to ansi.o(.text.PhysicalCursor_MoveTo) for PhysicalCursor_MoveTo
    ansi.o(.text.Cursor_PreviousLine) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.ARM.exidx.text.Cursor_PreviousLine) refers to ansi.o(.text.Cursor_PreviousLine) for [Anonymous Symbol]
    ansi.o(.text.Cursor_HorizontalAbsolute) refers to ansi.o(.text.PhysicalCursor_MoveTo) for PhysicalCursor_MoveTo
    ansi.o(.text.Cursor_HorizontalAbsolute) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.ARM.exidx.text.Cursor_HorizontalAbsolute) refers to ansi.o(.text.Cursor_HorizontalAbsolute) for [Anonymous Symbol]
    ansi.o(.text.VGA_Putch) refers to ansi.o(.text.PhysicalCursor_MoveTo) for PhysicalCursor_MoveTo
    ansi.o(.text.VGA_Putch) refers to ansi.o(.text.ScrollUp) for ScrollUp
    ansi.o(.text.VGA_Putch) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.ARM.exidx.text.VGA_Putch) refers to ansi.o(.text.VGA_Putch) for [Anonymous Symbol]
    ansi.o(.text.VGA_PutStr) refers to ansi.o(.text.VGA_Putch) for VGA_Putch
    ansi.o(.ARM.exidx.text.VGA_PutStr) refers to ansi.o(.text.VGA_PutStr) for [Anonymous Symbol]
    ansi.o(.text.VGA_Puthex) refers to ansi.o(.text.VGA_Putch) for VGA_Putch
    ansi.o(.ARM.exidx.text.VGA_Puthex) refers to ansi.o(.text.VGA_Puthex) for [Anonymous Symbol]
    ansi.o(.text.VGA_Putint) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    ansi.o(.text.VGA_Putint) refers to ansi.o(.text.VGA_Putch) for VGA_Putch
    ansi.o(.ARM.exidx.text.VGA_Putint) refers to ansi.o(.text.VGA_Putint) for [Anonymous Symbol]
    ansi.o(.text.ANSI_Init) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    ansi.o(.text.ANSI_Init) refers to ansi.o(.text.VGA_ClearScreen) for VGA_ClearScreen
    ansi.o(.text.ANSI_Init) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.text.ANSI_Init) refers to vga-min.o(.bss..L_MergedGlobals) for VGA
    ansi.o(.text.ANSI_Init) refers to ansi.o(.text.VerticalBlank_CB) for VerticalBlank_CB
    ansi.o(.ARM.exidx.text.ANSI_Init) refers to ansi.o(.text.ANSI_Init) for [Anonymous Symbol]
    ansi.o(.text.ControlCode) refers to ansi.o(.text.Cursor_Down) for Cursor_Down
    ansi.o(.text.ControlCode) refers to ansi.o(.text.ScrollUp) for ScrollUp
    ansi.o(.text.ControlCode) refers to ansi.o(.text.Cursor_HorizontalAbsolute) for Cursor_HorizontalAbsolute
    ansi.o(.text.ControlCode) refers to ansi.o(.text.VGA_Putch) for VGA_Putch
    ansi.o(.text.ControlCode) refers to ansi.o(.text.Cursor_Left) for Cursor_Left
    ansi.o(.text.ControlCode) refers to ansi.o(.text.OriginRow) for OriginRow
    ansi.o(.text.ControlCode) refers to ansi.o(.text.PhysicalCursor_MoveTo) for PhysicalCursor_MoveTo
    ansi.o(.text.ControlCode) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.ARM.exidx.text.ControlCode) refers to ansi.o(.text.ControlCode) for [Anonymous Symbol]
    ansi.o(.text.Clear_CSI) refers to rt_memclr.o(.text) for __aeabi_memclr
    ansi.o(.text.Clear_CSI) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.ARM.exidx.text.Clear_CSI) refers to ansi.o(.text.Clear_CSI) for [Anonymous Symbol]
    ansi.o(.text.ESC_Sequence) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    ansi.o(.text.ESC_Sequence) refers to ansi.o(.text.ANSI_Init) for ANSI_Init
    ansi.o(.text.ESC_Sequence) refers to ansi.o(.text.VGA_PutStr) for VGA_PutStr
    ansi.o(.text.ESC_Sequence) refers to ansi.o(.text.VGA_Puthex) for VGA_Puthex
    ansi.o(.text.ESC_Sequence) refers to ansi.o(.text.VGA_Putch) for VGA_Putch
    ansi.o(.text.ESC_Sequence) refers to ansi.o(.text.Cursor_RestorePosition) for Cursor_RestorePosition
    ansi.o(.text.ESC_Sequence) refers to ansi.o(.text.Cursor_HorizontalAbsolute) for Cursor_HorizontalAbsolute
    ansi.o(.text.ESC_Sequence) refers to ansi.o(.text.Cursor_Down) for Cursor_Down
    ansi.o(.text.ESC_Sequence) refers to ansi.o(.text.ScrollUp) for ScrollUp
    ansi.o(.text.ESC_Sequence) refers to ansi.o(.text.ScrollDown) for ScrollDown
    ansi.o(.text.ESC_Sequence) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.ARM.exidx.text.ESC_Sequence) refers to ansi.o(.text.ESC_Sequence) for [Anonymous Symbol]
    ansi.o(.text.CSI_Sequence) refers to ansi.o(.text.ANSICursor_MoveTo) for ANSICursor_MoveTo
    ansi.o(.text.CSI_Sequence) refers to ansi.o(.text.VGA_ClearScreenToEnd) for VGA_ClearScreenToEnd
    ansi.o(.text.CSI_Sequence) refers to ansi.o(.text.VGA_ClearLineToEnd) for VGA_ClearLineToEnd
    ansi.o(.text.CSI_Sequence) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    ansi.o(.text.CSI_Sequence) refers to ansi.o(.text.Cursor_Up) for Cursor_Up
    ansi.o(.text.CSI_Sequence) refers to ansi.o(.text.Cursor_Down) for Cursor_Down
    ansi.o(.text.CSI_Sequence) refers to ansi.o(.text.Cursor_Right) for Cursor_Right
    ansi.o(.text.CSI_Sequence) refers to ansi.o(.text.Cursor_Left) for Cursor_Left
    ansi.o(.text.CSI_Sequence) refers to ansi.o(.text.Cursor_NextLine) for Cursor_NextLine
    ansi.o(.text.CSI_Sequence) refers to ansi.o(.text.Cursor_PreviousLine) for Cursor_PreviousLine
    ansi.o(.text.CSI_Sequence) refers to ansi.o(.text.VGA_PutStr) for VGA_PutStr
    ansi.o(.text.CSI_Sequence) refers to ansi.o(.text.VGA_Putch) for VGA_Putch
    ansi.o(.text.CSI_Sequence) refers to ansi.o(.text.VGA_Putint) for VGA_Putint
    ansi.o(.text.CSI_Sequence) refers to ansi.o(.text.ScrollRegionDown) for ScrollRegionDown
    ansi.o(.text.CSI_Sequence) refers to ansi.o(.text.ScrollRegionUp) for ScrollRegionUp
    ansi.o(.text.CSI_Sequence) refers to ansi.o(.text.Cursor_HorizontalAbsolute) for Cursor_HorizontalAbsolute
    ansi.o(.text.CSI_Sequence) refers to ansi.o(.text.ScrollUp) for ScrollUp
    ansi.o(.text.CSI_Sequence) refers to ansi.o(.text.ScrollDown) for ScrollDown
    ansi.o(.text.CSI_Sequence) refers to ansi.o(.text.Cursor_Disable) for Cursor_Disable
    ansi.o(.text.CSI_Sequence) refers to ansi.o(.text.PhysicalCursor_MoveTo) for PhysicalCursor_MoveTo
    ansi.o(.text.CSI_Sequence) refers to ansi.o(.text.VGA_ClearScreen) for VGA_ClearScreen
    ansi.o(.text.CSI_Sequence) refers to ansi.o(.text.VGA_ClearScreenToStart) for VGA_ClearScreenToStart
    ansi.o(.text.CSI_Sequence) refers to ansi.o(.text.VGA_ClearLine) for VGA_ClearLine
    ansi.o(.text.CSI_Sequence) refers to ansi.o(.text.VGA_ClearLineToStart) for VGA_ClearLineToStart
    ansi.o(.text.CSI_Sequence) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.ARM.exidx.text.CSI_Sequence) refers to ansi.o(.text.CSI_Sequence) for [Anonymous Symbol]
    ansi.o(.text.ANSI_FSM) refers to ansi.o(.text.VGA_Putch) for VGA_Putch
    ansi.o(.text.ANSI_FSM) refers to ansi.o(.text.ControlCode) for ControlCode
    ansi.o(.text.ANSI_FSM) refers to rt_memclr.o(.text) for __aeabi_memclr
    ansi.o(.text.ANSI_FSM) refers to rt_ctype_table.o(.text) for __rt_ctype_table
    ansi.o(.text.ANSI_FSM) refers to ansi.o(.text.ESC_Sequence) for ESC_Sequence
    ansi.o(.text.ANSI_FSM) refers to ansi.o(.text.CSI_Sequence) for CSI_Sequence
    ansi.o(.text.ANSI_FSM) refers to ansi.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ansi.o(.ARM.exidx.text.ANSI_FSM) refers to ansi.o(.text.ANSI_FSM) for [Anonymous Symbol]
    rt_ctype_table.o(.text) refers to rt_locale_intlibspace.o(.text) for __rt_locale
    rt_ctype_table.o(.text) refers to lc_ctype_c.o(locale$$code) for _get_lc_ctype
    rt_memcpy.o(.text) refers to rt_memcpy.o(.emb_text) for __aeabi_memcpy4
    rt_memmove.o(.text) refers to rt_memcpy.o(.emb_text) for __aeabi_memcpy4
    rt_memmove.o(.text) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    aeabi_memset.o(.text) refers to rt_memclr.o(.text) for _memset
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    rt_locale.o(.text) refers to rt_locale.o(.bss) for __rt_locale_data
    rt_locale_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    lc_ctype_c.o(locale$$data) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000014) for __rt_lib_init_lc_ctype_2
    lc_ctype_c.o(locale$$code) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000014) for __rt_lib_init_lc_ctype_2
    lc_ctype_c.o(locale$$code) refers to strcmp.o(.text) for strcmp
    lc_ctype_c.o(locale$$code) refers to lc_ctype_c.o(locale$$data) for __lcctype_c_name
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to term.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    libinit2.o(.ARM.Collect$$libinit$$00000011) refers (Weak) to rt_locale_intlibspace.o(.text) for __rt_locale
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers (Weak) to lc_ctype_c.o(locale$$code) for _get_lc_ctype
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f030.o(.text) for __user_initial_stackheap
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to tempstk.o(.text) for __temporary_stack_top
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to __main.o(!!!main) for __main
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing vga-min.o(.text), (0 bytes).
    Removing vga-min.o(.ARM.exidx.text.VGA_Init), (8 bytes).
    Removing vga-min.o(.ARM.exidx.text.TIM3_IRQHandler), (8 bytes).
    Removing vga-min.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing vga-min.o(.ARM.exidx.text.Delay), (8 bytes).
    Removing serial.o(.text), (0 bytes).
    Removing serial.o(.ARM.exidx.text.USART_Init), (8 bytes).
    Removing serial.o(.ARM.exidx.text.USART1_IRQHandler), (8 bytes).
    Removing serial.o(.ARM.exidx.text.Putchar), (8 bytes).
    Removing serial.o(.ARM.exidx.text.PutStr), (8 bytes).
    Removing serial.o(.text.Putint), (38 bytes).
    Removing serial.o(.ARM.exidx.text.Putint), (8 bytes).
    Removing serial.o(.text.Puthex), (50 bytes).
    Removing serial.o(.ARM.exidx.text.Puthex), (8 bytes).
    Removing fifo.o(.text), (0 bytes).
    Removing fifo.o(.ARM.exidx.text.FIFO_Clear), (8 bytes).
    Removing fifo.o(.text.FIFO_WriteAvail), (18 bytes).
    Removing fifo.o(.ARM.exidx.text.FIFO_WriteAvail), (8 bytes).
    Removing fifo.o(.ARM.exidx.text.FIFO_Write), (8 bytes).
    Removing fifo.o(.ARM.exidx.text.FIFO_ReadAvail), (8 bytes).
    Removing fifo.o(.ARM.exidx.text.FIFO_Read), (8 bytes).
    Removing fifo.o(.ARM.exidx.text.Getc), (8 bytes).
    Removing fifo.o(.text.Getc_Timeout), (48 bytes).
    Removing fifo.o(.ARM.exidx.text.Getc_Timeout), (8 bytes).
    Removing ps2.o(.text), (0 bytes).
    Removing ps2.o(.ARM.exidx.text.PS2_Init), (8 bytes).
    Removing ps2.o(.ARM.exidx.text.EXTI0_1_IRQHandler), (8 bytes).
    Removing ps2.o(.ARM.exidx.text.PS2_Parity), (8 bytes).
    Removing ps2.o(.ARM.exidx.text.PS2_Send), (8 bytes).
    Removing ps2.o(.ARM.exidx.text.PS2_Update_LED), (8 bytes).
    Removing ps2.o(.text.NumLockOn), (28 bytes).
    Removing ps2.o(.ARM.exidx.text.NumLockOn), (8 bytes).
    Removing ps2.o(.text.NumLockOff), (24 bytes).
    Removing ps2.o(.ARM.exidx.text.NumLockOff), (8 bytes).
    Removing ps2.o(.ARM.exidx.text.PS2_Task), (8 bytes).
    Removing ps2.o(.ARM.exidx.text.Lookup_Key), (8 bytes).
    Removing rcc.o(.text), (0 bytes).
    Removing rcc.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing term.o(.text), (0 bytes).
    Removing term.o(.ARM.exidx.text.main), (8 bytes).
    Removing term.o(.ARM.use_no_argv), (4 bytes).
    Removing ansi.o(.text), (0 bytes).
    Removing ansi.o(.ARM.exidx.text.VerticalBlank_CB), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.Cursor_Task), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.Cursor_Disable), (8 bytes).
    Removing ansi.o(.text.Cursor_Enable), (20 bytes).
    Removing ansi.o(.ARM.exidx.text.Cursor_Enable), (8 bytes).
    Removing ansi.o(.text.Cursor_SavePosition), (32 bytes).
    Removing ansi.o(.ARM.exidx.text.Cursor_SavePosition), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.Cursor_RestorePosition), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.PhysicalCursor_MoveTo), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.Cursor_Reset), (8 bytes).
    Removing ansi.o(.text.BlankChar), (20 bytes).
    Removing ansi.o(.ARM.exidx.text.BlankChar), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.VGA_ClearScreen), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.VGA_ClearScreenToEnd), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.VGA_ClearScreenToStart), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.VGA_ClearLine), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.VGA_ClearLineToEnd), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.VGA_ClearLineToStart), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.ScrollRegionUp), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.ScrollRegionDown), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.ScrollUp), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.ScrollDown), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.ANSICursor_MoveTo), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.OriginRow), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.Cursor_Up), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.Cursor_Down), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.Cursor_Left), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.Cursor_Right), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.Cursor_NextLine), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.Cursor_PreviousLine), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.Cursor_HorizontalAbsolute), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.VGA_Putch), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.VGA_PutStr), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.VGA_Puthex), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.VGA_Putint), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.ANSI_Init), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.ControlCode), (8 bytes).
    Removing ansi.o(.text.Clear_CSI), (28 bytes).
    Removing ansi.o(.ARM.exidx.text.Clear_CSI), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.ESC_Sequence), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.CSI_Sequence), (8 bytes).
    Removing ansi.o(.ARM.exidx.text.ANSI_FSM), (8 bytes).
    Removing vgafont.o(.text), (0 bytes).

85 unused section(s) (total 838 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_ctype_table.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatterp.s                 0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  tempstk.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv_div0.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/locale.s                         0x00000000   Number         0  lc_ctype_c.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memmove.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  aeabi_memset.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strcmp.o ABSOLUTE
    ../fplib/cfplib/fpinit.c                 0x00000000   Number         0  fpinit.o ABSOLUTE
    ansi.c                                   0x00000000   Number         0  ansi.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    fifo.c                                   0x00000000   Number         0  fifo.o ABSOLUTE
    ps2.c                                    0x00000000   Number         0  ps2.o ABSOLUTE
    rcc.c                                    0x00000000   Number         0  rcc.o ABSOLUTE
    serial.c                                 0x00000000   Number         0  serial.o ABSOLUTE
    startup_stm32f030.s                      0x00000000   Number         0  startup_stm32f030.o ABSOLUTE
    term.c                                   0x00000000   Number         0  term.o ABSOLUTE
    vga-min.c                                0x00000000   Number         0  vga-min.o ABSOLUTE
    vgafont.c                                0x00000000   Number         0  vgafont.o ABSOLUTE
    RESET                                    0x08000000   Section      180  startup_stm32f030.o(RESET)
    !!!main                                  0x080000b4   Section        8  __main.o(!!!main)
    !!!scatter                               0x080000bc   Section       84  __scatter.o(!!!scatter)
    !!handler_copy                           0x08000110   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_null                           0x0800012c   Section        2  __scatter.o(!!handler_null)
    !!handler_zi                             0x08000130   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x0800014c   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x0800014e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x0800014e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x0800014e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x0800014e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0800014e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x0800014e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000011          0x0800014e   Section        6  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x08000154   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000014          0x08000154   Section       12  libinit2.o(.ARM.Collect$$libinit$$00000014)
    .ARM.Collect$$libinit$$00000015          0x08000160   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x08000160   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x08000160   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x08000160   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x08000160   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x08000160   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x08000160   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x08000160   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x08000160   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x08000160   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x08000160   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x08000160   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x08000160   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x08000160   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x08000160   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x08000162   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000164   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000164   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000164   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000164   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000164   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000164   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000164   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000166   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000166   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000166   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x0800016c   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x0800016c   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000170   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000170   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x08000178   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x0800017a   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x0800017a   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x0800017e   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x08000184   Section       56  rt_memcpy.o(.emb_text)
    .text                                    0x080001bc   Section       52  startup_stm32f030.o(.text)
    .text                                    0x080001f0   Section       16  rt_ctype_table.o(.text)
    .text                                    0x08000200   Section        0  rt_memcpy.o(.text)
    .text                                    0x08000282   Section        0  rt_memmove.o(.text)
    .text                                    0x08000318   Section        0  aeabi_memset.o(.text)
    .text                                    0x0800032a   Section        0  rt_memclr.o(.text)
    .text                                    0x0800036c   Section      364  aeabi_sdiv.o(.text)
    .text                                    0x080004d8   Section        0  heapauxi.o(.text)
    .text                                    0x080004e0   Section        8  rt_locale_intlibspace.o(.text)
    .text                                    0x080004e8   Section        8  libspace.o(.text)
    .text                                    0x080004f0   Section        0  strcmp.o(.text)
    .text                                    0x08000578   Section       62  sys_stackheap_outer.o(.text)
    .text                                    0x080005b6   Section        0  exit.o(.text)
    .text                                    0x080005c8   Section        0  sys_exit.o(.text)
    .text                                    0x080005d4   Section        2  use_no_semi.o(.text)
    .text                                    0x080005d6   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x080005d8   Section        0  ansi.o(.text.ANSICursor_MoveTo)
    [Anonymous Symbol]                       0x08000608   Section        0  ansi.o(.text.ANSI_FSM)
    [Anonymous Symbol]                       0x080006e8   Section        0  ansi.o(.text.ANSI_Init)
    __arm_cp.32_0                            0x08000750   Number         4  ansi.o(.text.ANSI_Init)
    __arm_cp.32_1                            0x08000754   Number         4  ansi.o(.text.ANSI_Init)
    __arm_cp.32_2                            0x08000758   Number         4  ansi.o(.text.ANSI_Init)
    [Anonymous Symbol]                       0x0800075c   Section        0  ansi.o(.text.CSI_Sequence)
    __arm_cp.36_0                            0x08000a30   Number         4  ansi.o(.text.CSI_Sequence)
    [Anonymous Symbol]                       0x08000a3c   Section        0  ansi.o(.text.ControlCode)
    [Anonymous Symbol]                       0x08000b68   Section        0  ansi.o(.text.Cursor_Disable)
    [Anonymous Symbol]                       0x08000b84   Section        0  ansi.o(.text.Cursor_Down)
    [Anonymous Symbol]                       0x08000bb4   Section        0  ansi.o(.text.Cursor_HorizontalAbsolute)
    [Anonymous Symbol]                       0x08000bcc   Section        0  ansi.o(.text.Cursor_Left)
    [Anonymous Symbol]                       0x08000bf0   Section        0  ansi.o(.text.Cursor_NextLine)
    [Anonymous Symbol]                       0x08000c08   Section        0  ansi.o(.text.Cursor_PreviousLine)
    [Anonymous Symbol]                       0x08000c20   Section        0  ansi.o(.text.Cursor_Reset)
    [Anonymous Symbol]                       0x08000c48   Section        0  ansi.o(.text.Cursor_RestorePosition)
    [Anonymous Symbol]                       0x08000c70   Section        0  ansi.o(.text.Cursor_Right)
    [Anonymous Symbol]                       0x08000c94   Section        0  ansi.o(.text.Cursor_Task)
    __arm_cp.1_1                             0x08000ce8   Number         4  ansi.o(.text.Cursor_Task)
    [Anonymous Symbol]                       0x08000cec   Section        0  ansi.o(.text.Cursor_Up)
    [Anonymous Symbol]                       0x08000d14   Section        0  vga-min.o(.text.Delay)
    __arm_cp.3_0                             0x08000d20   Number         4  vga-min.o(.text.Delay)
    [Anonymous Symbol]                       0x08000d24   Section        0  ansi.o(.text.ESC_Sequence)
    __arm_cp.35_0                            0x08000dd4   Number         4  ansi.o(.text.ESC_Sequence)
    [Anonymous Symbol]                       0x08000de0   Section        0  ps2.o(.text.EXTI0_1_IRQHandler)
    __arm_cp.1_0                             0x08000eb8   Number         4  ps2.o(.text.EXTI0_1_IRQHandler)
    __arm_cp.1_3                             0x08000ebc   Number         4  ps2.o(.text.EXTI0_1_IRQHandler)
    __arm_cp.1_4                             0x08000ec0   Number         4  ps2.o(.text.EXTI0_1_IRQHandler)
    __arm_cp.1_5                             0x08000ec4   Number         4  ps2.o(.text.EXTI0_1_IRQHandler)
    __arm_cp.1_6                             0x08000ec8   Number         4  ps2.o(.text.EXTI0_1_IRQHandler)
    [Anonymous Symbol]                       0x08000ecc   Section        0  fifo.o(.text.FIFO_Clear)
    [Anonymous Symbol]                       0x08000ed4   Section        0  fifo.o(.text.FIFO_Read)
    [Anonymous Symbol]                       0x08000ef6   Section        0  fifo.o(.text.FIFO_ReadAvail)
    [Anonymous Symbol]                       0x08000f02   Section        0  fifo.o(.text.FIFO_Write)
    [Anonymous Symbol]                       0x08000f28   Section        0  fifo.o(.text.Getc)
    Lookup_Key                               0x08000f3f   Thumb Code    28  ps2.o(.text.Lookup_Key)
    [Anonymous Symbol]                       0x08000f3e   Section        0  ps2.o(.text.Lookup_Key)
    [Anonymous Symbol]                       0x08000f5c   Section        0  ansi.o(.text.OriginRow)
    __arm_cp.20_0                            0x08000f70   Number         4  ansi.o(.text.OriginRow)
    [Anonymous Symbol]                       0x08000f74   Section        0  ps2.o(.text.PS2_Init)
    __arm_cp.0_0                             0x08000fb8   Number         4  ps2.o(.text.PS2_Init)
    __arm_cp.0_1                             0x08000fbc   Number         4  ps2.o(.text.PS2_Init)
    __arm_cp.0_3                             0x08000fc0   Number         4  ps2.o(.text.PS2_Init)
    __arm_cp.0_4                             0x08000fc4   Number         4  ps2.o(.text.PS2_Init)
    [Anonymous Symbol]                       0x08000fc8   Section        0  ps2.o(.text.PS2_Parity)
    [Anonymous Symbol]                       0x08000fec   Section        0  ps2.o(.text.PS2_Send)
    __arm_cp.3_0                             0x08001064   Number         4  ps2.o(.text.PS2_Send)
    __arm_cp.3_1                             0x08001068   Number         4  ps2.o(.text.PS2_Send)
    [Anonymous Symbol]                       0x0800106c   Section        0  ps2.o(.text.PS2_Task)
    __arm_cp.7_0                             0x0800126c   Number         4  ps2.o(.text.PS2_Task)
    __arm_cp.7_1                             0x08001270   Number         4  ps2.o(.text.PS2_Task)
    __arm_cp.7_2                             0x08001274   Number         4  ps2.o(.text.PS2_Task)
    __arm_cp.7_3                             0x08001278   Number         4  ps2.o(.text.PS2_Task)
    __arm_cp.7_4                             0x0800127c   Number         4  ps2.o(.text.PS2_Task)
    __arm_cp.7_5                             0x08001280   Number         4  ps2.o(.text.PS2_Task)
    __arm_cp.7_6                             0x08001284   Number         4  ps2.o(.text.PS2_Task)
    __arm_cp.7_8                             0x080012a4   Number         4  ps2.o(.text.PS2_Task)
    __arm_cp.7_9                             0x080012a8   Number         4  ps2.o(.text.PS2_Task)
    __arm_cp.7_10                            0x080012ac   Number         4  ps2.o(.text.PS2_Task)
    [Anonymous Symbol]                       0x080012b0   Section        0  ps2.o(.text.PS2_Update_LED)
    __arm_cp.4_0                             0x080012d0   Number         4  ps2.o(.text.PS2_Update_LED)
    [Anonymous Symbol]                       0x080012d4   Section        0  vga-min.o(.text.PendSV_Handler)
    __arm_cp.2_0                             0x080012f4   Number         4  vga-min.o(.text.PendSV_Handler)
    __arm_cp.2_2                             0x080012f8   Number         4  vga-min.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x080012fc   Section        0  ansi.o(.text.PhysicalCursor_MoveTo)
    __arm_cp.6_0                             0x08001328   Number         4  ansi.o(.text.PhysicalCursor_MoveTo)
    [Anonymous Symbol]                       0x0800132c   Section        0  serial.o(.text.PutStr)
    [Anonymous Symbol]                       0x08001344   Section        0  serial.o(.text.Putchar)
    [Anonymous Symbol]                       0x08001364   Section        0  ansi.o(.text.ScrollDown)
    [Anonymous Symbol]                       0x08001384   Section        0  ansi.o(.text.ScrollRegionDown)
    [Anonymous Symbol]                       0x080013cc   Section        0  ansi.o(.text.ScrollRegionUp)
    [Anonymous Symbol]                       0x08001414   Section        0  ansi.o(.text.ScrollUp)
    __arm_cp.17_0                            0x0800144c   Number         4  ansi.o(.text.ScrollUp)
    [Anonymous Symbol]                       0x08001450   Section        0  rcc.o(.text.SystemInit)
    __arm_cp.0_0                             0x08001494   Number         4  rcc.o(.text.SystemInit)
    __arm_cp.0_1                             0x08001498   Number         4  rcc.o(.text.SystemInit)
    [Anonymous Symbol]                       0x0800149c   Section        0  vga-min.o(.text.TIM3_IRQHandler)
    __arm_cp.1_0                             0x08001660   Number         4  vga-min.o(.text.TIM3_IRQHandler)
    __arm_cp.1_1                             0x08001664   Number         4  vga-min.o(.text.TIM3_IRQHandler)
    __arm_cp.1_2                             0x08001668   Number         4  vga-min.o(.text.TIM3_IRQHandler)
    __arm_cp.1_3                             0x0800166c   Number         4  vga-min.o(.text.TIM3_IRQHandler)
    __arm_cp.1_4                             0x08001670   Number         4  vga-min.o(.text.TIM3_IRQHandler)
    __arm_cp.1_5                             0x08001674   Number         4  vga-min.o(.text.TIM3_IRQHandler)
    __arm_cp.1_6                             0x08001678   Number         4  vga-min.o(.text.TIM3_IRQHandler)
    __arm_cp.1_7                             0x0800167c   Number         4  vga-min.o(.text.TIM3_IRQHandler)
    __arm_cp.1_8                             0x08001680   Number         4  vga-min.o(.text.TIM3_IRQHandler)
    __arm_cp.1_9                             0x08001684   Number         4  vga-min.o(.text.TIM3_IRQHandler)
    __arm_cp.1_10                            0x08001688   Number         4  vga-min.o(.text.TIM3_IRQHandler)
    [Anonymous Symbol]                       0x0800168c   Section        0  serial.o(.text.USART1_IRQHandler)
    [Anonymous Symbol]                       0x080016c8   Section        0  serial.o(.text.USART_Init)
    __arm_cp.0_0                             0x0800170c   Number         4  serial.o(.text.USART_Init)
    __arm_cp.0_1                             0x08001710   Number         4  serial.o(.text.USART_Init)
    __arm_cp.0_2                             0x08001714   Number         4  serial.o(.text.USART_Init)
    __arm_cp.0_3                             0x08001718   Number         4  serial.o(.text.USART_Init)
    [Anonymous Symbol]                       0x0800171c   Section        0  ansi.o(.text.VGA_ClearLine)
    __arm_cp.12_0                            0x08001740   Number         4  ansi.o(.text.VGA_ClearLine)
    __arm_cp.12_1                            0x08001744   Number         4  ansi.o(.text.VGA_ClearLine)
    [Anonymous Symbol]                       0x08001748   Section        0  ansi.o(.text.VGA_ClearLineToEnd)
    [Anonymous Symbol]                       0x08001774   Section        0  ansi.o(.text.VGA_ClearLineToStart)
    __arm_cp.14_0                            0x0800179c   Number         4  ansi.o(.text.VGA_ClearLineToStart)
    __arm_cp.14_1                            0x080017a0   Number         4  ansi.o(.text.VGA_ClearLineToStart)
    [Anonymous Symbol]                       0x080017a4   Section        0  ansi.o(.text.VGA_ClearScreen)
    __arm_cp.9_1                             0x080017c4   Number         4  ansi.o(.text.VGA_ClearScreen)
    [Anonymous Symbol]                       0x080017c8   Section        0  ansi.o(.text.VGA_ClearScreenToEnd)
    __arm_cp.10_0                            0x08001800   Number         4  ansi.o(.text.VGA_ClearScreenToEnd)
    [Anonymous Symbol]                       0x08001804   Section        0  ansi.o(.text.VGA_ClearScreenToStart)
    __arm_cp.11_1                            0x0800182c   Number         4  ansi.o(.text.VGA_ClearScreenToStart)
    [Anonymous Symbol]                       0x08001830   Section        0  vga-min.o(.text.VGA_Init)
    __arm_cp.0_0                             0x080018fc   Number         4  vga-min.o(.text.VGA_Init)
    __arm_cp.0_1                             0x08001900   Number         4  vga-min.o(.text.VGA_Init)
    __arm_cp.0_2                             0x08001904   Number         4  vga-min.o(.text.VGA_Init)
    __arm_cp.0_3                             0x08001908   Number         4  vga-min.o(.text.VGA_Init)
    __arm_cp.0_4                             0x0800190c   Number         4  vga-min.o(.text.VGA_Init)
    __arm_cp.0_5                             0x08001910   Number         4  vga-min.o(.text.VGA_Init)
    __arm_cp.0_6                             0x08001914   Number         4  vga-min.o(.text.VGA_Init)
    __arm_cp.0_7                             0x08001918   Number         4  vga-min.o(.text.VGA_Init)
    __arm_cp.0_8                             0x0800191c   Number         4  vga-min.o(.text.VGA_Init)
    __arm_cp.0_9                             0x08001920   Number         4  vga-min.o(.text.VGA_Init)
    __arm_cp.0_10                            0x08001924   Number         4  vga-min.o(.text.VGA_Init)
    __arm_cp.0_11                            0x08001928   Number         4  vga-min.o(.text.VGA_Init)
    __arm_cp.0_12                            0x0800192c   Number         4  vga-min.o(.text.VGA_Init)
    __arm_cp.0_13                            0x08001930   Number         4  vga-min.o(.text.VGA_Init)
    __arm_cp.0_14                            0x08001934   Number         4  vga-min.o(.text.VGA_Init)
    __arm_cp.0_15                            0x08001938   Number         4  vga-min.o(.text.VGA_Init)
    [Anonymous Symbol]                       0x0800193c   Section        0  ansi.o(.text.VGA_PutStr)
    [Anonymous Symbol]                       0x08001954   Section        0  ansi.o(.text.VGA_Putch)
    [Anonymous Symbol]                       0x080019d4   Section        0  ansi.o(.text.VGA_Puthex)
    [Anonymous Symbol]                       0x08001a06   Section        0  ansi.o(.text.VGA_Putint)
    [Anonymous Symbol]                       0x08001a2c   Section        0  ansi.o(.text.VerticalBlank_CB)
    __arm_cp.0_0                             0x08001a5c   Number         4  ansi.o(.text.VerticalBlank_CB)
    [Anonymous Symbol]                       0x08001a60   Section        0  term.o(.text.main)
    __arm_cp.0_0                             0x08001aa4   Number         4  term.o(.text.main)
    __arm_cp.0_1                             0x08001aa8   Number         4  term.o(.text.main)
    __arm_cp.0_2                             0x08001aac   Number         4  term.o(.text.main)
    locale$$code                             0x08001ab0   Section       44  lc_ctype_c.o(locale$$code)
    [Anonymous Symbol]                       0x08002c7a   Section        0  ps2.o(.rodata.str1.1)
    locale$$data                             0x08002cd8   Section      272  lc_ctype_c.o(locale$$data)
    __lcctype_c_name                         0x08002cdc   Data           2  lc_ctype_c.o(locale$$data)
    __lcctype_c_start                        0x08002ce4   Data           0  lc_ctype_c.o(locale$$data)
    __lcctype_c_end                          0x08002de8   Data           0  lc_ctype_c.o(locale$$data)
    [Anonymous Symbol]                       0x20000000   Section        0  serial.o(.data..L_MergedGlobals)
    [Anonymous Symbol]                       0x20000058   Section        0  ps2.o(.data..L_MergedGlobals)
    .bss                                     0x200000b8   Section       96  libspace.o(.bss)
    [Anonymous Symbol]                       0x20000118   Section        0  vga-min.o(.bss..L_MergedGlobals)
    ScanLineBuf                              0x20000128   Data          82  vga-min.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x2000017c   Section        0  ansi.o(.bss..L_MergedGlobals)
    Saved_Prefs                              0x2000017d   Data           3  ansi.o(.bss..L_MergedGlobals)
    Saved_Cursor                             0x20000188   Data           5  ansi.o(.bss..L_MergedGlobals)
    CSI                                      0x2000018d   Data          19  ansi.o(.bss..L_MergedGlobals)
    PS2_Fsm.0                                0x200001a0   Data           1  ps2.o(.bss..L_MergedGlobals.22)
    [Anonymous Symbol]                       0x200001a0   Section        0  ps2.o(.bss..L_MergedGlobals.22)
    PS2_Cmd                                  0x200001a1   Data           1  ps2.o(.bss..L_MergedGlobals.22)
    PS2_Cmd_Arg                              0x200001a2   Data           1  ps2.o(.bss..L_MergedGlobals.22)
    PS2_IF                                   0x200001a4   Data           2  ps2.o(.bss..L_MergedGlobals.22)
    Modifiers                                0x200001a6   Data           2  ps2.o(.bss..L_MergedGlobals.22)
    Heap_Mem                                 0x20000b08   Data           0  startup_stm32f030.o(HEAP)
    Stack_Mem                                0x20000b08   Data         512  startup_stm32f030.o(STACK)
    HEAP                                     0x20000b08   Section        0  startup_stm32f030.o(HEAP)
    STACK                                    0x20000b08   Section      512  startup_stm32f030.o(STACK)
    __initial_sp                             0x20000d08   Data           0  startup_stm32f030.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000000b4   Number         0  startup_stm32f030.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f030.o(RESET)
    __Vectors_End                            0x080000b4   Data           0  startup_stm32f030.o(RESET)
    __main                                   0x080000b5   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080000bd   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080000bd   Thumb Code    74  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080000bd   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_loop                       0x080000c7   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x08000111   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_null                       0x0800012d   Thumb Code     2  __scatter.o(!!handler_null)
    __scatterload_zeroinit                   0x08000131   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x0800014d   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x0800014f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_heap_1                     0x0800014f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_common                  0x0800014f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_preinit_1                  0x0800014f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x0800014f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x0800014f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_user_alloc_1               0x0800014f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_lc_collate_1               0x08000155   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_2                 0x08000155   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000014)
    __rt_lib_init_alloca_1                   0x08000161   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x08000161   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x08000161   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x08000161   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x08000161   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x08000161   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_trap_1                  0x08000161   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x08000161   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_lc_ctype_1                 0x08000161   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x08000161   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x08000161   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x08000161   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_return                     0x08000161   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x08000161   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x08000161   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_shutdown                        0x08000163   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000165   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000165   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000165   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000165   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000165   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000165   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000165   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000167   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000167   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000167   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x0800016d   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x0800016d   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x08000171   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000171   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x08000179   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x0800017b   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x0800017b   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x0800017f   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __aeabi_memcpy4                          0x08000185   Thumb Code    56  rt_memcpy.o(.emb_text)
    __aeabi_memcpy8                          0x08000185   Thumb Code     0  rt_memcpy.o(.emb_text)
    Reset_Handler                            0x080001bd   Thumb Code     8  startup_stm32f030.o(.text)
    NMI_Handler                              0x080001c5   Thumb Code     2  startup_stm32f030.o(.text)
    HardFault_Handler                        0x080001c7   Thumb Code     2  startup_stm32f030.o(.text)
    SVC_Handler                              0x080001c9   Thumb Code     2  startup_stm32f030.o(.text)
    SysTick_Handler                          0x080001cd   Thumb Code     2  startup_stm32f030.o(.text)
    ADC1_IRQHandler                          0x080001cf   Thumb Code     0  startup_stm32f030.o(.text)
    DMA1_Channel1_IRQHandler                 0x080001cf   Thumb Code     0  startup_stm32f030.o(.text)
    DMA1_Channel2_3_IRQHandler               0x080001cf   Thumb Code     0  startup_stm32f030.o(.text)
    DMA1_Channel4_5_IRQHandler               0x080001cf   Thumb Code     0  startup_stm32f030.o(.text)
    EXTI2_3_IRQHandler                       0x080001cf   Thumb Code     0  startup_stm32f030.o(.text)
    EXTI4_15_IRQHandler                      0x080001cf   Thumb Code     0  startup_stm32f030.o(.text)
    FLASH_IRQHandler                         0x080001cf   Thumb Code     0  startup_stm32f030.o(.text)
    I2C1_IRQHandler                          0x080001cf   Thumb Code     0  startup_stm32f030.o(.text)
    I2C2_IRQHandler                          0x080001cf   Thumb Code     0  startup_stm32f030.o(.text)
    RCC_IRQHandler                           0x080001cf   Thumb Code     0  startup_stm32f030.o(.text)
    RTC_IRQHandler                           0x080001cf   Thumb Code     0  startup_stm32f030.o(.text)
    SPI1_IRQHandler                          0x080001cf   Thumb Code     0  startup_stm32f030.o(.text)
    SPI2_IRQHandler                          0x080001cf   Thumb Code     0  startup_stm32f030.o(.text)
    TIM14_IRQHandler                         0x080001cf   Thumb Code     0  startup_stm32f030.o(.text)
    TIM15_IRQHandler                         0x080001cf   Thumb Code     0  startup_stm32f030.o(.text)
    TIM16_IRQHandler                         0x080001cf   Thumb Code     0  startup_stm32f030.o(.text)
    TIM17_IRQHandler                         0x080001cf   Thumb Code     0  startup_stm32f030.o(.text)
    TIM1_BRK_UP_TRG_COM_IRQHandler           0x080001cf   Thumb Code     0  startup_stm32f030.o(.text)
    TIM1_CC_IRQHandler                       0x080001cf   Thumb Code     0  startup_stm32f030.o(.text)
    USART2_IRQHandler                        0x080001cf   Thumb Code     0  startup_stm32f030.o(.text)
    WWDG_IRQHandler                          0x080001cf   Thumb Code     0  startup_stm32f030.o(.text)
    __user_initial_stackheap                 0x080001d1   Thumb Code     0  startup_stm32f030.o(.text)
    __rt_ctype_table                         0x080001f1   Thumb Code    16  rt_ctype_table.o(.text)
    __aeabi_memcpy                           0x08000201   Thumb Code   130  rt_memcpy.o(.text)
    __rt_memcpy                              0x08000201   Thumb Code     0  rt_memcpy.o(.text)
    __aeabi_memmove4                         0x08000283   Thumb Code    70  rt_memmove.o(.text)
    __aeabi_memmove8                         0x08000283   Thumb Code     0  rt_memmove.o(.text)
    __aeabi_memmove                          0x080002c9   Thumb Code    80  rt_memmove.o(.text)
    __rt_memmove                             0x080002c9   Thumb Code     0  rt_memmove.o(.text)
    __aeabi_memset                           0x08000319   Thumb Code    18  aeabi_memset.o(.text)
    _memset_w                                0x0800032b   Thumb Code    26  rt_memclr.o(.text)
    _memset                                  0x08000345   Thumb Code    30  rt_memclr.o(.text)
    __aeabi_memclr                           0x08000363   Thumb Code     4  rt_memclr.o(.text)
    __rt_memclr                              0x08000363   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x08000367   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr8                          0x08000367   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr_w                            0x08000367   Thumb Code     4  rt_memclr.o(.text)
    __aeabi_uidiv                            0x0800036d   Thumb Code     0  aeabi_sdiv.o(.text)
    __aeabi_uidivmod                         0x0800036d   Thumb Code    20  aeabi_sdiv.o(.text)
    __aeabi_idiv                             0x08000381   Thumb Code     0  aeabi_sdiv.o(.text)
    __aeabi_idivmod                          0x08000381   Thumb Code   338  aeabi_sdiv.o(.text)
    __use_two_region_memory                  0x080004d9   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x080004db   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x080004dd   Thumb Code     2  heapauxi.o(.text)
    __rt_locale                              0x080004e1   Thumb Code     8  rt_locale_intlibspace.o(.text)
    __user_libspace                          0x080004e9   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x080004e9   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x080004e9   Thumb Code     0  libspace.o(.text)
    strcmp                                   0x080004f1   Thumb Code   132  strcmp.o(.text)
    __user_setup_stackheap                   0x08000579   Thumb Code    62  sys_stackheap_outer.o(.text)
    exit                                     0x080005b7   Thumb Code    16  exit.o(.text)
    _sys_exit                                0x080005c9   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x080005d5   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x080005d5   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x080005d7   Thumb Code     0  indicate_semi.o(.text)
    ANSICursor_MoveTo                        0x080005d9   Thumb Code    48  ansi.o(.text.ANSICursor_MoveTo)
    ANSI_FSM                                 0x08000609   Thumb Code   224  ansi.o(.text.ANSI_FSM)
    ANSI_Init                                0x080006e9   Thumb Code   104  ansi.o(.text.ANSI_Init)
    CSI_Sequence                             0x0800075d   Thumb Code   724  ansi.o(.text.CSI_Sequence)
    ControlCode                              0x08000a3d   Thumb Code   300  ansi.o(.text.ControlCode)
    Cursor_Disable                           0x08000b69   Thumb Code    28  ansi.o(.text.Cursor_Disable)
    Cursor_Down                              0x08000b85   Thumb Code    48  ansi.o(.text.Cursor_Down)
    Cursor_HorizontalAbsolute                0x08000bb5   Thumb Code    24  ansi.o(.text.Cursor_HorizontalAbsolute)
    Cursor_Left                              0x08000bcd   Thumb Code    36  ansi.o(.text.Cursor_Left)
    Cursor_NextLine                          0x08000bf1   Thumb Code    24  ansi.o(.text.Cursor_NextLine)
    Cursor_PreviousLine                      0x08000c09   Thumb Code    24  ansi.o(.text.Cursor_PreviousLine)
    Cursor_Reset                             0x08000c21   Thumb Code    40  ansi.o(.text.Cursor_Reset)
    Cursor_RestorePosition                   0x08000c49   Thumb Code    40  ansi.o(.text.Cursor_RestorePosition)
    Cursor_Right                             0x08000c71   Thumb Code    36  ansi.o(.text.Cursor_Right)
    Cursor_Task                              0x08000c95   Thumb Code    84  ansi.o(.text.Cursor_Task)
    Cursor_Up                                0x08000ced   Thumb Code    40  ansi.o(.text.Cursor_Up)
    Delay                                    0x08000d15   Thumb Code    12  vga-min.o(.text.Delay)
    ESC_Sequence                             0x08000d25   Thumb Code   176  ansi.o(.text.ESC_Sequence)
    EXTI0_1_IRQHandler                       0x08000de1   Thumb Code   216  ps2.o(.text.EXTI0_1_IRQHandler)
    FIFO_Clear                               0x08000ecd   Thumb Code     8  fifo.o(.text.FIFO_Clear)
    FIFO_Read                                0x08000ed5   Thumb Code    34  fifo.o(.text.FIFO_Read)
    FIFO_ReadAvail                           0x08000ef7   Thumb Code    12  fifo.o(.text.FIFO_ReadAvail)
    FIFO_Write                               0x08000f03   Thumb Code    38  fifo.o(.text.FIFO_Write)
    Getc                                     0x08000f29   Thumb Code    22  fifo.o(.text.Getc)
    OriginRow                                0x08000f5d   Thumb Code    20  ansi.o(.text.OriginRow)
    PS2_Init                                 0x08000f75   Thumb Code    68  ps2.o(.text.PS2_Init)
    PS2_Parity                               0x08000fc9   Thumb Code    34  ps2.o(.text.PS2_Parity)
    PS2_Send                                 0x08000fed   Thumb Code   120  ps2.o(.text.PS2_Send)
    PS2_Task                                 0x0800106d   Thumb Code   512  ps2.o(.text.PS2_Task)
    PS2_Update_LED                           0x080012b1   Thumb Code    32  ps2.o(.text.PS2_Update_LED)
    PendSV_Handler                           0x080012d5   Thumb Code    32  vga-min.o(.text.PendSV_Handler)
    PhysicalCursor_MoveTo                    0x080012fd   Thumb Code    44  ansi.o(.text.PhysicalCursor_MoveTo)
    PutStr                                   0x0800132d   Thumb Code    24  serial.o(.text.PutStr)
    Putchar                                  0x08001345   Thumb Code    32  serial.o(.text.Putchar)
    ScrollDown                               0x08001365   Thumb Code    32  ansi.o(.text.ScrollDown)
    ScrollRegionDown                         0x08001385   Thumb Code    72  ansi.o(.text.ScrollRegionDown)
    ScrollRegionUp                           0x080013cd   Thumb Code    72  ansi.o(.text.ScrollRegionUp)
    ScrollUp                                 0x08001415   Thumb Code    56  ansi.o(.text.ScrollUp)
    SystemInit                               0x08001451   Thumb Code    68  rcc.o(.text.SystemInit)
    TIM3_IRQHandler                          0x0800149d   Thumb Code   452  vga-min.o(.text.TIM3_IRQHandler)
    USART1_IRQHandler                        0x0800168d   Thumb Code    60  serial.o(.text.USART1_IRQHandler)
    USART_Init                               0x080016c9   Thumb Code    68  serial.o(.text.USART_Init)
    VGA_ClearLine                            0x0800171d   Thumb Code    36  ansi.o(.text.VGA_ClearLine)
    VGA_ClearLineToEnd                       0x08001749   Thumb Code    44  ansi.o(.text.VGA_ClearLineToEnd)
    VGA_ClearLineToStart                     0x08001775   Thumb Code    40  ansi.o(.text.VGA_ClearLineToStart)
    VGA_ClearScreen                          0x080017a5   Thumb Code    32  ansi.o(.text.VGA_ClearScreen)
    VGA_ClearScreenToEnd                     0x080017c9   Thumb Code    56  ansi.o(.text.VGA_ClearScreenToEnd)
    VGA_ClearScreenToStart                   0x08001805   Thumb Code    40  ansi.o(.text.VGA_ClearScreenToStart)
    VGA_Init                                 0x08001831   Thumb Code   204  vga-min.o(.text.VGA_Init)
    VGA_PutStr                               0x0800193d   Thumb Code    24  ansi.o(.text.VGA_PutStr)
    VGA_Putch                                0x08001955   Thumb Code   128  ansi.o(.text.VGA_Putch)
    VGA_Puthex                               0x080019d5   Thumb Code    50  ansi.o(.text.VGA_Puthex)
    VGA_Putint                               0x08001a07   Thumb Code    38  ansi.o(.text.VGA_Putint)
    VerticalBlank_CB                         0x08001a2d   Thumb Code    48  ansi.o(.text.VerticalBlank_CB)
    main                                     0x08001a61   Thumb Code    68  term.o(.text.main)
    _get_lc_ctype                            0x08001ab1   Thumb Code    44  lc_ctype_c.o(locale$$code)
    Escaped_Regular                          0x08001adc   Data          36  ps2.o(.rodata.Escaped_Regular)
    FONT_TABLE                               0x08001b00   Data        4096  vgafont.o(.rodata.FONT_TABLE)
    Keypad_Numeric                           0x08002b00   Data          28  ps2.o(.rodata.Keypad_Numeric)
    Keypad_Regular                           0x08002b1c   Data          28  ps2.o(.rodata.Keypad_Regular)
    Scancode_Translations                    0x08002b38   Data         144  ps2.o(.rodata.Scancode_Translations)
    Shifted_Regular                          0x08002bc8   Data          89  ps2.o(.rodata.Shifted_Regular)
    Unshifted_Regular                        0x08002c21   Data          89  ps2.o(.rodata.Unshifted_Regular)
    Region$$Table$$Base                      0x08002cb8   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08002cd8   Number         0  anon$$obj.o(Region$$Table)
    __ctype                                  0x08002ce5   Data           0  lc_ctype_c.o(locale$$data)
    TxBuf                                    0x20000000   Data          19  serial.o(.data..L_MergedGlobals)
    RxBuf                                    0x20000013   Data          67  serial.o(.data..L_MergedGlobals)
    PS2_Buf                                  0x20000058   Data           7  ps2.o(.data..L_MergedGlobals)
    Ansi_Key_Sequences                       0x20000060   Data          88  ps2.o(.data..L_MergedGlobals)
    __libspace_start                         0x200000b8   Data          96  libspace.o(.bss)
    MicroTimer0                              0x20000118   Data           1  vga-min.o(.bss..L_MergedGlobals)
    __temporary_stack_top$libspace           0x20000118   Data           0  libspace.o(.bss)
    MicroTimer1                              0x20000119   Data           1  vga-min.o(.bss..L_MergedGlobals)
    VGA                                      0x2000011c   Data          12  vga-min.o(.bss..L_MergedGlobals)
    wrap_next                                0x2000017c   Data           1  ansi.o(.bss..L_MergedGlobals)
    ANSI_Prefs                               0x20000180   Data           3  ansi.o(.bss..L_MergedGlobals)
    Cursor                                   0x20000183   Data           5  ansi.o(.bss..L_MergedGlobals)
    TextBuffer                               0x200001a8   Data        2400  vga-min.o(.bss.TextBuffer)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000b5

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00002ea0, Max: 0x00004000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00002de8, Max: 0x00004000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000b4   Data   RO            3    RESET               startup_stm32f030.o
    0x080000b4   0x080000b4   0x00000008   Code   RO          234  * !!!main             c_p.l(__main.o)
    0x080000bc   0x080000bc   0x00000054   Code   RO          421    !!!scatter          c_p.l(__scatter.o)
    0x08000110   0x08000110   0x0000001a   Code   RO          425    !!handler_copy      c_p.l(__scatter_copy.o)
    0x0800012a   0x0800012a   0x00000002   PAD
    0x0800012c   0x0800012c   0x00000002   Code   RO          422    !!handler_null      c_p.l(__scatter.o)
    0x0800012e   0x0800012e   0x00000002   PAD
    0x08000130   0x08000130   0x0000001c   Code   RO          427    !!handler_zi        c_p.l(__scatter_zi.o)
    0x0800014c   0x0800014c   0x00000002   Code   RO          334    .ARM.Collect$$libinit$$00000000  c_p.l(libinit.o)
    0x0800014e   0x0800014e   0x00000000   Code   RO          272    .ARM.Collect$$libinit$$00000002  c_p.l(libinit2.o)
    0x0800014e   0x0800014e   0x00000000   Code   RO          274    .ARM.Collect$$libinit$$00000004  c_p.l(libinit2.o)
    0x0800014e   0x0800014e   0x00000000   Code   RO          276    .ARM.Collect$$libinit$$00000006  c_p.l(libinit2.o)
    0x0800014e   0x0800014e   0x00000000   Code   RO          279    .ARM.Collect$$libinit$$0000000C  c_p.l(libinit2.o)
    0x0800014e   0x0800014e   0x00000000   Code   RO          281    .ARM.Collect$$libinit$$0000000E  c_p.l(libinit2.o)
    0x0800014e   0x0800014e   0x00000000   Code   RO          283    .ARM.Collect$$libinit$$00000010  c_p.l(libinit2.o)
    0x0800014e   0x0800014e   0x00000006   Code   RO          284    .ARM.Collect$$libinit$$00000011  c_p.l(libinit2.o)
    0x08000154   0x08000154   0x00000000   Code   RO          286    .ARM.Collect$$libinit$$00000013  c_p.l(libinit2.o)
    0x08000154   0x08000154   0x0000000c   Code   RO          287    .ARM.Collect$$libinit$$00000014  c_p.l(libinit2.o)
    0x08000160   0x08000160   0x00000000   Code   RO          288    .ARM.Collect$$libinit$$00000015  c_p.l(libinit2.o)
    0x08000160   0x08000160   0x00000000   Code   RO          290    .ARM.Collect$$libinit$$00000017  c_p.l(libinit2.o)
    0x08000160   0x08000160   0x00000000   Code   RO          292    .ARM.Collect$$libinit$$00000019  c_p.l(libinit2.o)
    0x08000160   0x08000160   0x00000000   Code   RO          294    .ARM.Collect$$libinit$$0000001B  c_p.l(libinit2.o)
    0x08000160   0x08000160   0x00000000   Code   RO          296    .ARM.Collect$$libinit$$0000001D  c_p.l(libinit2.o)
    0x08000160   0x08000160   0x00000000   Code   RO          298    .ARM.Collect$$libinit$$0000001F  c_p.l(libinit2.o)
    0x08000160   0x08000160   0x00000000   Code   RO          300    .ARM.Collect$$libinit$$00000021  c_p.l(libinit2.o)
    0x08000160   0x08000160   0x00000000   Code   RO          302    .ARM.Collect$$libinit$$00000023  c_p.l(libinit2.o)
    0x08000160   0x08000160   0x00000000   Code   RO          304    .ARM.Collect$$libinit$$00000025  c_p.l(libinit2.o)
    0x08000160   0x08000160   0x00000000   Code   RO          306    .ARM.Collect$$libinit$$00000027  c_p.l(libinit2.o)
    0x08000160   0x08000160   0x00000000   Code   RO          310    .ARM.Collect$$libinit$$0000002E  c_p.l(libinit2.o)
    0x08000160   0x08000160   0x00000000   Code   RO          312    .ARM.Collect$$libinit$$00000030  c_p.l(libinit2.o)
    0x08000160   0x08000160   0x00000000   Code   RO          314    .ARM.Collect$$libinit$$00000032  c_p.l(libinit2.o)
    0x08000160   0x08000160   0x00000000   Code   RO          316    .ARM.Collect$$libinit$$00000034  c_p.l(libinit2.o)
    0x08000160   0x08000160   0x00000002   Code   RO          317    .ARM.Collect$$libinit$$00000035  c_p.l(libinit2.o)
    0x08000162   0x08000162   0x00000002   Code   RO          388    .ARM.Collect$$libshutdown$$00000000  c_p.l(libshutdown.o)
    0x08000164   0x08000164   0x00000000   Code   RO          404    .ARM.Collect$$libshutdown$$00000002  c_p.l(libshutdown2.o)
    0x08000164   0x08000164   0x00000000   Code   RO          406    .ARM.Collect$$libshutdown$$00000004  c_p.l(libshutdown2.o)
    0x08000164   0x08000164   0x00000000   Code   RO          409    .ARM.Collect$$libshutdown$$00000007  c_p.l(libshutdown2.o)
    0x08000164   0x08000164   0x00000000   Code   RO          412    .ARM.Collect$$libshutdown$$0000000A  c_p.l(libshutdown2.o)
    0x08000164   0x08000164   0x00000000   Code   RO          414    .ARM.Collect$$libshutdown$$0000000C  c_p.l(libshutdown2.o)
    0x08000164   0x08000164   0x00000000   Code   RO          417    .ARM.Collect$$libshutdown$$0000000F  c_p.l(libshutdown2.o)
    0x08000164   0x08000164   0x00000002   Code   RO          418    .ARM.Collect$$libshutdown$$00000010  c_p.l(libshutdown2.o)
    0x08000166   0x08000166   0x00000000   Code   RO          236    .ARM.Collect$$rtentry$$00000000  c_p.l(__rtentry.o)
    0x08000166   0x08000166   0x00000000   Code   RO          253    .ARM.Collect$$rtentry$$00000002  c_p.l(__rtentry2.o)
    0x08000166   0x08000166   0x00000006   Code   RO          265    .ARM.Collect$$rtentry$$00000004  c_p.l(__rtentry4.o)
    0x0800016c   0x0800016c   0x00000000   Code   RO          255    .ARM.Collect$$rtentry$$00000009  c_p.l(__rtentry2.o)
    0x0800016c   0x0800016c   0x00000004   Code   RO          256    .ARM.Collect$$rtentry$$0000000A  c_p.l(__rtentry2.o)
    0x08000170   0x08000170   0x00000000   Code   RO          258    .ARM.Collect$$rtentry$$0000000C  c_p.l(__rtentry2.o)
    0x08000170   0x08000170   0x00000008   Code   RO          259    .ARM.Collect$$rtentry$$0000000D  c_p.l(__rtentry2.o)
    0x08000178   0x08000178   0x00000002   Code   RO          338    .ARM.Collect$$rtexit$$00000000  c_p.l(rtexit.o)
    0x0800017a   0x0800017a   0x00000000   Code   RO          359    .ARM.Collect$$rtexit$$00000002  c_p.l(rtexit2.o)
    0x0800017a   0x0800017a   0x00000004   Code   RO          360    .ARM.Collect$$rtexit$$00000003  c_p.l(rtexit2.o)
    0x0800017e   0x0800017e   0x00000006   Code   RO          361    .ARM.Collect$$rtexit$$00000004  c_p.l(rtexit2.o)
    0x08000184   0x08000184   0x00000038   Code   RO          218    .emb_text           c_p.l(rt_memcpy.o)
    0x080001bc   0x080001bc   0x00000034   Code   RO            4    .text               startup_stm32f030.o
    0x080001f0   0x080001f0   0x00000010   Code   RO          216    .text               c_p.l(rt_ctype_table.o)
    0x08000200   0x08000200   0x00000082   Code   RO          219    .text               c_p.l(rt_memcpy.o)
    0x08000282   0x08000282   0x00000096   Code   RO          222    .text               c_p.l(rt_memmove.o)
    0x08000318   0x08000318   0x00000012   Code   RO          224    .text               c_p.l(aeabi_memset.o)
    0x0800032a   0x0800032a   0x00000040   Code   RO          226    .text               c_p.l(rt_memclr.o)
    0x0800036a   0x0800036a   0x00000002   PAD
    0x0800036c   0x0800036c   0x0000016c   Code   RO          228    .text               c_p.l(aeabi_sdiv.o)
    0x080004d8   0x080004d8   0x00000006   Code   RO          232    .text               c_p.l(heapauxi.o)
    0x080004de   0x080004de   0x00000002   PAD
    0x080004e0   0x080004e0   0x00000008   Code   RO          244    .text               c_p.l(rt_locale_intlibspace.o)
    0x080004e8   0x080004e8   0x00000008   Code   RO          249    .text               c_p.l(libspace.o)
    0x080004f0   0x080004f0   0x00000088   Code   RO          269    .text               c_p.l(strcmp.o)
    0x08000578   0x08000578   0x0000003e   Code   RO          318    .text               c_p.l(sys_stackheap_outer.o)
    0x080005b6   0x080005b6   0x00000010   Code   RO          321    .text               c_p.l(exit.o)
    0x080005c6   0x080005c6   0x00000002   PAD
    0x080005c8   0x080005c8   0x0000000c   Code   RO          352    .text               c_p.l(sys_exit.o)
    0x080005d4   0x080005d4   0x00000002   Code   RO          379    .text               c_p.l(use_no_semi.o)
    0x080005d6   0x080005d6   0x00000000   Code   RO          381    .text               c_p.l(indicate_semi.o)
    0x080005d6   0x080005d6   0x00000002   PAD
    0x080005d8   0x080005d8   0x00000030   Code   RO          162    .text.ANSICursor_MoveTo  ansi.o
    0x08000608   0x08000608   0x000000e0   Code   RO          198    .text.ANSI_FSM      ansi.o
    0x080006e8   0x080006e8   0x00000074   Code   RO          188    .text.ANSI_Init     ansi.o
    0x0800075c   0x0800075c   0x000002e0   Code   RO          196    .text.CSI_Sequence  ansi.o
    0x08000a3c   0x08000a3c   0x0000012c   Code   RO          190    .text.ControlCode   ansi.o
    0x08000b68   0x08000b68   0x0000001c   Code   RO          128    .text.Cursor_Disable  ansi.o
    0x08000b84   0x08000b84   0x00000030   Code   RO          168    .text.Cursor_Down   ansi.o
    0x08000bb4   0x08000bb4   0x00000018   Code   RO          178    .text.Cursor_HorizontalAbsolute  ansi.o
    0x08000bcc   0x08000bcc   0x00000024   Code   RO          170    .text.Cursor_Left   ansi.o
    0x08000bf0   0x08000bf0   0x00000018   Code   RO          174    .text.Cursor_NextLine  ansi.o
    0x08000c08   0x08000c08   0x00000018   Code   RO          176    .text.Cursor_PreviousLine  ansi.o
    0x08000c20   0x08000c20   0x00000028   Code   RO          138    .text.Cursor_Reset  ansi.o
    0x08000c48   0x08000c48   0x00000028   Code   RO          134    .text.Cursor_RestorePosition  ansi.o
    0x08000c70   0x08000c70   0x00000024   Code   RO          172    .text.Cursor_Right  ansi.o
    0x08000c94   0x08000c94   0x00000058   Code   RO          126    .text.Cursor_Task   ansi.o
    0x08000cec   0x08000cec   0x00000028   Code   RO          166    .text.Cursor_Up     ansi.o
    0x08000d14   0x08000d14   0x00000010   Code   RO           17    .text.Delay         vga-min.o
    0x08000d24   0x08000d24   0x000000bc   Code   RO          194    .text.ESC_Sequence  ansi.o
    0x08000de0   0x08000de0   0x000000ec   Code   RO           74    .text.EXTI0_1_IRQHandler  ps2.o
    0x08000ecc   0x08000ecc   0x00000008   Code   RO           50    .text.FIFO_Clear    fifo.o
    0x08000ed4   0x08000ed4   0x00000022   Code   RO           58    .text.FIFO_Read     fifo.o
    0x08000ef6   0x08000ef6   0x0000000c   Code   RO           56    .text.FIFO_ReadAvail  fifo.o
    0x08000f02   0x08000f02   0x00000026   Code   RO           54    .text.FIFO_Write    fifo.o
    0x08000f28   0x08000f28   0x00000016   Code   RO           60    .text.Getc          fifo.o
    0x08000f3e   0x08000f3e   0x0000001c   Code   RO           88    .text.Lookup_Key    ps2.o
    0x08000f5a   0x08000f5a   0x00000002   PAD
    0x08000f5c   0x08000f5c   0x00000018   Code   RO          164    .text.OriginRow     ansi.o
    0x08000f74   0x08000f74   0x00000054   Code   RO           72    .text.PS2_Init      ps2.o
    0x08000fc8   0x08000fc8   0x00000022   Code   RO           76    .text.PS2_Parity    ps2.o
    0x08000fea   0x08000fea   0x00000002   PAD
    0x08000fec   0x08000fec   0x00000080   Code   RO           78    .text.PS2_Send      ps2.o
    0x0800106c   0x0800106c   0x00000244   Code   RO           86    .text.PS2_Task      ps2.o
    0x080012b0   0x080012b0   0x00000024   Code   RO           80    .text.PS2_Update_LED  ps2.o
    0x080012d4   0x080012d4   0x00000028   Code   RO           15    .text.PendSV_Handler  vga-min.o
    0x080012fc   0x080012fc   0x00000030   Code   RO          136    .text.PhysicalCursor_MoveTo  ansi.o
    0x0800132c   0x0800132c   0x00000018   Code   RO           35    .text.PutStr        serial.o
    0x08001344   0x08001344   0x00000020   Code   RO           33    .text.Putchar       serial.o
    0x08001364   0x08001364   0x00000020   Code   RO          160    .text.ScrollDown    ansi.o
    0x08001384   0x08001384   0x00000048   Code   RO          156    .text.ScrollRegionDown  ansi.o
    0x080013cc   0x080013cc   0x00000048   Code   RO          154    .text.ScrollRegionUp  ansi.o
    0x08001414   0x08001414   0x0000003c   Code   RO          158    .text.ScrollUp      ansi.o
    0x08001450   0x08001450   0x0000004c   Code   RO          107    .text.SystemInit    rcc.o
    0x0800149c   0x0800149c   0x000001f0   Code   RO           13    .text.TIM3_IRQHandler  vga-min.o
    0x0800168c   0x0800168c   0x0000003c   Code   RO           31    .text.USART1_IRQHandler  serial.o
    0x080016c8   0x080016c8   0x00000054   Code   RO           29    .text.USART_Init    serial.o
    0x0800171c   0x0800171c   0x0000002c   Code   RO          148    .text.VGA_ClearLine  ansi.o
    0x08001748   0x08001748   0x0000002c   Code   RO          150    .text.VGA_ClearLineToEnd  ansi.o
    0x08001774   0x08001774   0x00000030   Code   RO          152    .text.VGA_ClearLineToStart  ansi.o
    0x080017a4   0x080017a4   0x00000024   Code   RO          142    .text.VGA_ClearScreen  ansi.o
    0x080017c8   0x080017c8   0x0000003c   Code   RO          144    .text.VGA_ClearScreenToEnd  ansi.o
    0x08001804   0x08001804   0x0000002c   Code   RO          146    .text.VGA_ClearScreenToStart  ansi.o
    0x08001830   0x08001830   0x0000010c   Code   RO           11    .text.VGA_Init      vga-min.o
    0x0800193c   0x0800193c   0x00000018   Code   RO          182    .text.VGA_PutStr    ansi.o
    0x08001954   0x08001954   0x00000080   Code   RO          180    .text.VGA_Putch     ansi.o
    0x080019d4   0x080019d4   0x00000032   Code   RO          184    .text.VGA_Puthex    ansi.o
    0x08001a06   0x08001a06   0x00000026   Code   RO          186    .text.VGA_Putint    ansi.o
    0x08001a2c   0x08001a2c   0x00000034   Code   RO          124    .text.VerticalBlank_CB  ansi.o
    0x08001a60   0x08001a60   0x00000050   Code   RO          115    .text.main          term.o
    0x08001ab0   0x08001ab0   0x0000002c   Code   RO          247    locale$$code        c_p.l(lc_ctype_c.o)
    0x08001adc   0x08001adc   0x00000024   Data   RO           95    .rodata.Escaped_Regular  ps2.o
    0x08001b00   0x08001b00   0x00001000   Data   RO          209    .rodata.FONT_TABLE  vgafont.o
    0x08002b00   0x08002b00   0x0000001c   Data   RO           93    .rodata.Keypad_Numeric  ps2.o
    0x08002b1c   0x08002b1c   0x0000001c   Data   RO           94    .rodata.Keypad_Regular  ps2.o
    0x08002b38   0x08002b38   0x00000090   Data   RO           90    .rodata.Scancode_Translations  ps2.o
    0x08002bc8   0x08002bc8   0x00000059   Data   RO           92    .rodata.Shifted_Regular  ps2.o
    0x08002c21   0x08002c21   0x00000059   Data   RO           91    .rodata.Unshifted_Regular  ps2.o
    0x08002c7a   0x08002c7a   0x0000003c   Data   RO           96    .rodata.str1.1      ps2.o
    0x08002cb6   0x08002cb6   0x00000002   PAD
    0x08002cb8   0x08002cb8   0x00000020   Data   RO          420    Region$$Table       anon$$obj.o
    0x08002cd8   0x08002cd8   0x00000110   Data   RO          246    locale$$data        c_p.l(lc_ctype_c.o)


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08002de8, Size: 0x00000d08, Max: 0x00001000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08002de8   0x00000056   Data   RW           41    .data..L_MergedGlobals  serial.o
    0x20000056   0x08002e3e   0x00000002   PAD
    0x20000058   0x08002e40   0x00000060   Data   RW           97    .data..L_MergedGlobals  ps2.o
    0x200000b8        -       0x00000060   Zero   RW          250    .bss                c_p.l(libspace.o)
    0x20000118        -       0x00000062   Zero   RW           20    .bss..L_MergedGlobals  vga-min.o
    0x2000017a   0x08002ea0   0x00000002   PAD
    0x2000017c        -       0x00000024   Zero   RW          200    .bss..L_MergedGlobals  ansi.o
    0x200001a0        -       0x00000008   Zero   RW           98    .bss..L_MergedGlobals.22  ps2.o
    0x200001a8        -       0x00000960   Zero   RW           19    .bss.TextBuffer     vga-min.o
    0x20000b08        -       0x00000000   Zero   RW            2    HEAP                startup_stm32f030.o
    0x20000b08        -       0x00000200   Zero   RW            1    STACK               startup_stm32f030.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      2916        336          0          0         36      10268   ansi.o
       114          0          0          0          0       2203   fifo.o
      1126        134        474         96          8       8256   ps2.o
        76          8          0          0          0       1169   rcc.o
       200         16          0         86          0       4203   serial.o
        52         22        180          0        512        632   startup_stm32f030.o
        80         12          0          0          0        719   term.o
       820        120          0          0       2498       6605   vga-min.o
         0          0       4096          0          0        502   vgafont.o

    ----------------------------------------------------------------------
      5388        648       4784        184       3056      34557   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         4          0          2          2          2          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        86         10          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        18          0          0          0          0         68   aeabi_memset.o
       364          4          0          0          0         92   aeabi_sdiv.o
        16          0          0          0          0         68   exit.o
         6          0          0          0          0        136   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
        44         10        272          0          0         76   lc_ctype_c.o
         2          0          0          0          0          0   libinit.o
        20          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        16          4          0          0          0         76   rt_ctype_table.o
         8          4          0          0          0         68   rt_locale_intlibspace.o
        64          0          0          0          0        108   rt_memclr.o
       186          0          0          0          0        144   rt_memcpy.o
       150          0          0          0          0        104   rt_memmove.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
       136          4          0          0          0         72   strcmp.o
        12          4          0          0          0         60   sys_exit.o
        62          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
      1308         44        272          0         96       1356   Library Totals
        12          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1296         44        272          0         96       1356   c_p.l

    ----------------------------------------------------------------------
      1308         44        272          0         96       1356   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      6696        692       5056        184       3152      35289   Grand Totals
      6696        692       5056        184       3152      35289   ELF Image Totals
      6696        692       5056        184          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                11752 (  11.48kB)
    Total RW  Size (RW Data + ZI Data)              3336 (   3.26kB)
    Total ROM Size (Code + RO Data + RW Data)      11936 (  11.66kB)

==============================================================================

